#!/usr/bin/env python
import argparse
import json
import os
import sys
import subprocess

argparser = argparse.ArgumentParser()
argparser.add_argument('tasks', nargs='*')
argparser.add_argument(
    '-l', '--list', action='store_true', help='list available tasks'
)
argparser.add_argument(
    '-t', '--time', action='store_true', help='print runtime information'
)

old_cwd = os.getcwd()
while not os.path.isdir('.vscode'):
    if os.getcwd() == '/':
        raise IOError('.vscode directory not found')
    os.chdir('..')
os.chdir(old_cwd)

with open(os.path.join('.vscode', 'tasks.json')) as f:
    tasks = json.loads(
        '\n'.join(
            line for line in f.readlines() if not line.strip().startswith('//')
        )
    )['tasks']


opts = argparser.parse_args()


if opts.list or not opts.tasks:
    for task in tasks:
        print(task['label'])
    sys.exit(0)

root = os.path.abspath(os.getcwd())
for task_name in opts.tasks:
    for task in tasks:
        if task['label'] != task_name:
            continue
        options = task.get('options', {})
        cmd = task['command']
        print(cmd)
        if opts.time:
            cmd = 'time ({})'.format(cmd)
        cwd = root
        if 'cwd' in options:
            cwd = os.path.join(root, options['cwd'])
        p = subprocess.Popen(
            ['bash', '--login'],
            stdin=subprocess.PIPE,
            cwd=cwd,
            shell=task['type'] == 'shell',
        )
        p.stdin.write(cmd + '\n')
        p.stdin.write('exit\n')
        p.wait()
